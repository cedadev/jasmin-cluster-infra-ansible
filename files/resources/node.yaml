---
heat_template_version: 2016-04-08


description: >
  Resource for a cluster node.


parameters:
  node_idx:
    type: number
    label: Node index within cluster group

  name:
    type: string
    label: The server name

  image:
    type: string
    label: The image to use
    constraints:
      - custom_constraint: glance.image

  flavor:
    type: string
    label: The flavor to use
    constraints:
      - custom_constraint: nova.flavor

  user_keypair:
    type: string
    label: SSH key pair for user access
    constraints:
      - custom_constraint: nova.keypair

  deploy_public_key:
    type: string
    label: SSH public key for deployments

  network:
    type: string
    label: Private network to use
    constraints:
      - custom_constraint: neutron.network

  root_volume_size:
    type: number
    label: Size of volume for root filesystem
    default: 0

  group_node_ports:
    type: json
    label: List of primary port resources for all nodes in this group

  primary_ips:
    type: json
    label: List of primary IP addresses for all nodes in this group


resources:
  server:
    type: OS::Nova::Server
    properties:
      name: { get_param: name }
      flavor: { get_param: flavor }
      key_name: { get_param: user_keypair }
      networks: 
        - port: {get_param: [group_node_ports, {get_param: node_idx}]}
      image: { get_param: image }
#      block_device_mapping_v2:
#        - image_id: { get_param: image }
#          volume_size: { get_param: root_volume_size }
#          delete_on_termination: true
      user_data_format: RAW
      user_data:
        str_replace:
          template: |
            #cloud-config
            ssh_authorized_keys:
              - %deploy_public_key%
          params:
            "%deploy_public_key%": { get_param: deploy_public_key }


outputs:
  OS::stack_id:
    value: { get_resource: server }

  instance_data:
    value:
      id: { get_resource: server }
      name: { get_param: name }
      ip: { get_param: [primary_ips, {get_param: node_idx}]}
